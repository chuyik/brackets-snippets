# ---
# HTML
# From: https://github.com/joshnh/HTML-Snippets
# ---
- trigger: q
  scope: html
  description: Quote
  text: |
        <q cite="${1}">${2}</q>${3}
- trigger: wbr
  scope: html
  description: Word Break Opportunity
  text: |
        <wbr>${1}

- trigger: em
  scope: html
  description: Emphasis
  text: |
        <em>${1}</em>${2}

- trigger: embed
  scope: html
  description: Embed
  text: |
        <embed type="${1:video/quicktime}" src="${2:#}" width="${3:300}" height="${4:300}">${5}

- trigger: review
  scope: html
  description: review
  text: |
        <!-- REVIEW: ${1} -->

- trigger: td
  scope: html
  description: Table Cell
  text: |
        <td>
            ${1}
        </td>

- trigger: table
  scope: html
  description: Table
  text: |
        <table>
            ${1}
        </table>

- trigger: tbody
  scope: html
  description: Table Body
  text: |
        <tbody>
            ${1}
        </tbody>

- trigger: th
  scope: html
  description: Table Header Cell
  text: |
        <th>
            ${1}
        </th>

- trigger: template
  scope: html
  description: Template
  text: |
        <template id="${1}">
            ${2}
        </template>

- trigger: tfoot
  scope: html
  description: Table Foot
  text: |
        <tfoot>
            ${1}
        </tfoot>

- trigger: textarea
  scope: html
  description: Text Area
  text: |
        <textarea name="${1:name}" rows="${2:8}" cols="${3:40}">${4}</textarea>${5}

- trigger: thead
  scope: html
  description: Table Head
  text: |
        <thead>
            ${1}
        </thead>

- trigger: time
  scope: html
  description: Time
  text: |
        <time>${1}</time>${2}

- trigger: title
  scope: html
  description: Title
  text: |
        <title>${1:Page Title}</title>${2}

- trigger: tr
  scope: html
  description: Table Row
  text: |
        <tr>
            ${1}
        </tr>

- trigger: todo
  scope: html
  description: todo
  text: |
        <!-- TODO: ${1} -->

- trigger: track
  scope: html
  description: Track
  text: |
        <track kind="${1:subtitles}" src="${2:sampleSubtitles_en.srt}" srclang="${3:en}">${4}

- trigger: u
  scope: html
  description: Underline
  text: |
        <u>${1}</u>${2}

- trigger: ul
  scope: html
  description: Unordered List
  text: |
        <ul>
            ${1}
        </ul>

- trigger: i
  scope: html
  description: Italic
  text: |
        <i>${1}</i>${2}

- trigger: idea
  scope: html
  description: idea
  text: |
        <!-- IDEA: ${1} -->

- trigger: img
  scope: html
  description: Image
  text: |
        <img src="${1}" alt="${2}" />${3}

- trigger: iframe
  scope: html
  description: Inline Frame
  text: |
        <iframe src="${1}" width="${2}" height="${3}">${4}</iframe>${5}

- trigger: import
  scope: html
  description: Import
  text: |
        <link rel="import" href="${1}">${2}

- trigger: ins
  scope: html
  description: Inserted Text
  text: |
        <ins>${1}</ins>${2}

- trigger: input
  scope: html
  description: Input
  text: |
        <input type="${1}" name="${2:name}" value="${3}">${4}

- trigger: ol
  scope: html
  description: Ordered List
  text: |
        <ol>
            ${1}
        </ol>

- trigger: opt
  scope: html
  description: Option
  text: |
        <option value="${1:option}">${2:option}</option>${3}

- trigger: object
  scope: html
  description: Object
  text: |
        <object data="${1:http://}" type="${2:mimetype}">${3}</object>${4}

- trigger: output
  scope: html
  description: Output
  text: |
        <output name="${1:result}">${2}</output>${3}

- trigger: optgroup
  scope: html
  description: Option Group
  text: |
        <optgroup label="${1:Group 1}">
            ${2}
        </optgroup>

- trigger: p
  scope: html
  description: Paragraph
  text: |
        <p>
            ${1}
        </p>

- trigger: pre
  scope: html
  description: Preformatted Text
  text: |
        <pre>
            ${1}
        </pre>

- trigger: param
  scope: html
  description: Parameter
  text: |
        <param name="${1:foo}" value="${2:bar}">${3}

- trigger: progress
  scope: html
  description: Progress
  text: |
        <progress value="${1:50}" max="${2:100}">${3:50%}</progress>${4}

- trigger: a
  scope: html
  description: Anchor
  text: |
        <a href="${1:#}">${2}</a>${3}

- trigger: abbr
  scope: html
  description: Abbreviation
  text: |
        <abbr title="${1}">${2}</abbr>${3}

- trigger: area
  scope: html
  description: Area
  text: |
        <area shape="${1:default}" coords="${2}" href="${3:#}" />${4}

- trigger: address
  scope: html
  description: Address
  text: |
        <address class="${1}">
            ${2}
        </address>

- trigger: aside
  scope: html
  description: Aside
  text: |
        <aside class="${1}">
            ${2}
        </aside>

- trigger: article
  scope: html
  description: Article
  text: |
        <article class="${1}">
            ${2}
        </article>

- trigger: audio
  scope: html
  description: Audio
  text: |
        <audio class="${1}">
            ${2}
        </audio>

- trigger: s
  scope: html
  description: Strikethrough
  text: |
        <s>${1}</s>${2}

- trigger: samp
  scope: html
  description: Sample Output
  text: |
        <samp>${1}</samp>${2}

- trigger: script
  scope: html
  description: Script
  text: |
        <script type="text/javascript">
            ${1}
        </script>

- trigger: scriptsrc
  scope: html
  description: Script With Source
  text: |
        <script src="${1}" charset="${2:utf-8}"></script>${3}

- trigger: select
  scope: html
  description: Select
  text: |
        <select class="${1}" name="${2}">
            ${3}
        </select>

- trigger: small
  scope: html
  description: Small
  text: |
        <small>${1}</small>${2}

- trigger: span
  scope: html
  description: Span
  text: |
        <span>${1}</span>${2}

- trigger: source
  scope: html
  description: Source
  text: |
        <source src="${1:http://}" type="${2:mimetype}">${3}

- trigger: strong
  scope: html
  description: Strong
  text: |
        <strong>${1}</strong>${2}

- trigger: sub
  scope: html
  description: Subscript
  text: |
        <sub>${1}</sub>${2}

- trigger: style
  scope: html
  description: Style
  text: |
        <style media="screen">
            ${1}
        </style>

- trigger: sup
  scope: html
  description: Superscript
  text: |
        <sup>${1}</sup>${2}

- trigger: summary
  scope: html
  description: Summary
  text: |
        <summary>${1}</summary>${2}

- trigger: data
  scope: html
  description: Data
  text: |
        <data value="${1}">${2}</data>${3}

- trigger: dd
  scope: html
  description: Description
  text: |
        <dd>${1}</dd>${2}

- trigger: del
  scope: html
  description: Deleted Text
  text: |
        <del>${1}</del>${2}

- trigger: datalist
  scope: html
  description: Data List
  text: |
        <datalist class="${1}">
            ${2}
        </datalist>

- trigger: dfn
  scope: html
  description: Definition
  text: |
        <dfn>${1}</dfn>${2}

- trigger: div
  scope: html
  description: Div
  text: |
        <div class="${1}">
            ${2}
        </div>

- trigger: dl
  scope: html
  description: Description List
  text: |
        <dl class="${1}">
            ${2}
        </dl>

- trigger: details
  scope: html
  description: Details
  text: |
        <details ${1:open}>${2}</details>${3}

- trigger: dt
  scope: html
  description: Definition Term
  text: |
        <dt>${1}</dt>${2}

- trigger: doctype
  scope: html
  description: HTML - 5
  text: |
        <!DOCTYPE html>

- trigger: favicon
  scope: html
  description: Favicon
  text: |
        <link rel="shortcut icon" href="${1}.ico">${2}

- trigger: fix
  scope: html
  description: fixme
  text: |
        <!-- FIXME: ${1} -->

- trigger: fieldset
  scope: html
  description: Fieldset
  text: |
        <fieldset>${1}</fieldset>${2}

- trigger: figure
  scope: html
  description: Figure
  text: |
        <figure>${1}</figure>${2}

- trigger: figcaption
  scope: html
  description: Figure Caption
  text: |
        <figcaption>${1}</figcaption>${2}

- trigger: form
  scope: html
  description: Form
  text: |
        <form class="${1}" action="${1:index.html}" method="${2:post}">
            ${3}
        </form>

- trigger: footer
  scope: html
  description: Footer
  text: |
        <footer>${1}</footer>${2}


- trigger: h1
  scope: html
  description: Heading 1
  text: |
        <h1>${1}</h1>${2}

- trigger: h2
  scope: html
  description: Heading 2
  text: |
        <h2>${1}</h2>${2}

- trigger: h3
  scope: html
  description: Heading 3
  text: |
        <h3>${1}</h3>${2}

- trigger: h4
  scope: html
  description: Heading 4
  text: |
        <h4>${1}</h4>${2}

- trigger: h5
  scope: html
  description: Heading 5
  text: |
        <h5>${1}</h5>${2}

- trigger: h6
  scope: html
  description: Heading 6
  text: |
        <h6>${1}</h6>${2}

- trigger: hack
  scope: html
  description: hack
  text: |
        <!-- HACK: ${1} -->

- trigger: head
  scope: html
  description: Head
  text: |
        <head>
            ${1}
        </head>

- trigger: hr
  scope: html
  description: Horizontal Ruler
  text: |
        <hr>${1}

- trigger: header
  scope: html
  description: Header
  text: |
        <header>
            ${1}
        </header>

- trigger: html
  scope: html
  description: HTML
  text: |
        <!DOCTYPE html>
        <html>
            <head>
                <meta name=viewport content="width=device-width, initial-scale=1">
                <meta charset="utf-8">
                <title>${1}</title>
            </head>
            <body>
                ${2}
            </body>
        </html>

- trigger: kbd
  scope: html
  description: Keyboard Input
  text: |
        <kbd>${1}</kbd>${2}

- trigger: keygen
  scope: html
  description: Keygen
  text: |
        <keygen name="${1:name}" challenge="${2:string}" keytype="${3:RSA}" keyparams="${4:medium}">${5}

- trigger: label
  scope: html
  description: Label
  text: |
        <label for="${1}">${2}</label>${3}

- trigger: li
  scope: html
  description: List Item
  text: |
        <li>${1}</li>${2}

- trigger: legal
  scope: html
  description: Copyright Notice
  text: |
        Copyright (c) ${1:2016} ${2:Copyright Holder} ${3:All Rights Reserved.}${4}

- trigger: legend
  scope: html
  description: Legend
  text: |
        <legend>${1}</legend>${2}

- trigger: link
  scope: html
  description: Link
  text: |
        <link rel="stylesheet" type="text/css" href="${1}">${2}

- trigger: lorem
  scope: html
  description: lorem ipsum
  text: |
        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
        incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
        nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu
        fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
        culpa qui officia deserunt mollit anim id est laborum.

- trigger: xxx
  scope: html
  description: xxx
  text: |
        <!-- XXX: ${1} -->

- trigger: canvas
  scope: html
  description: Canvas
  text: |
        <canvas id="${1:canvas}" width="${2:300}" height="${3:300}">${4}</canvas>${5}

- trigger: cite
  scope: html
  description: Citation
  text: |
        <cite>${1}</cite>${2}

- trigger: code
  scope: html
  description: Code
  text: |
        <code>${1}</code>${2}

- trigger: caption
  scope: html
  description: Caption
  text: |
        <caption>${1}</caption>${2}

- trigger: col
  scope: html
  description: Column
  text: |
        <col>${1}</col>${2}

- trigger: colgroup
  scope: html
  description: Column Group
  text: |
        <colgroup>${1}</colgroup>${2}

- trigger: content
  scope: html
  description: Content
  text: |
        <content select="${1}">${2}</content>${3}

- trigger: var
  scope: html
  description: Variable
  text: |
        <var>${1}</var>${2}

- trigger: video
  scope: html
  description: Video
  text: |
        <video src="${1:videofile.ogg}" ${2:autoplay} ${3:controls} poster="${4:posterimage.jpg}">
            ${5}
        </video>

- trigger: b
  scope: html
  description: Bold
  text: |
        <b>${1}</b>${2}

- trigger: base
  scope: html
  description: Base
  text: |
        <base href="${1:#}" target="${2:_blank}" />${3}

- trigger: bdi
  scope: html
  description: Bi-Directional Isolation
  text: |
        <bdi dir="${1:auto}">${2}</bdi>${3}

- trigger: bdo
  scope: html
  description: Bi-Directional Override
  text: |
        <bdo dir="${1:auto}">${2}</bdo>${3}

- trigger: br
  scope: html
  description: Line Breaker
  text: |
        <br>${1}

- trigger: body
  scope: html
  description: Body
  text: |
        <body>
            ${1}
        </body>

- trigger: blockquote
  scope: html
  description: Blockquote
  text: |
        <blockquote cite="${1:http://}">
            ${2}
        </blockquote>

- trigger: button
  scope: html
  description: Button
  text: |
        <button type="${1}" name="${2:button}">${3}</button>${4}

- trigger: nav
  scope: html
  description: Navigation
  text: |
        <nav>
            ${1}
        </nav>

- trigger: note
  scope: html
  description: note
  text: |
        <!-- NOTE: ${1} -->

- trigger: noscript
  scope: html
  description: Noscript
  text: |
        <noscript>
            ${1}
        </noscript>

- trigger: main
  scope: html
  description: Main
  text: |
        <main>
            ${1}
        </main>

- trigger: map
  scope: html
  description: Map
  text: |
        <map>
            ${1}
        </map>

- trigger: mailto
  scope: html
  description: Mail Anchor
  text: |
        <a href="mailto:${1:joe@example.com}?subject=${2:feedback}">${3:email me}</a>${4}

- trigger: mark
  scope: html
  description: Mark
  text: |
        <mark>${1}</mark>${2}

- trigger: menu
  scope: html
  description: Menu
  text: |
        <menu>
            ${1}
        </menu>

- trigger: meta
  scope: html
  description: Meta
  text: |
        <meta name="${1:name}" content="${2:content}">${3}

- trigger: menuitem
  scope: html
  description: Menu Item
  text: |
        <menuitem type="${1:command}" label="${2:Save}">${3}

- trigger: meter
  scope: html
  description: Meter
  text: |
        <meter min="${1:200}" max="${2:500}" value="${3:350}">${4}

- trigger: cond
  scope: html
  description: Conditional Comment
  text: |
        <!--[if ${1:lt IE 9}]>
          <link rel=stylesheet href="${2:css/ie.css}">
        <![endif]-->

- trigger: css
  scope: html
  description: Style Tag
  text: |
        <style type="text/css">${1}</style>${2}

- trigger: fig
  scope: html
  description: Figure Tag
  text: |
        <figure>
            <img src="${1}" alt="${2}">
            <figcaption>${3}</figcaption>
        </figure>

- trigger: ga
  scope: html
  description: Google Analytics
  text: |
        <script>
            var _gaq = [['_setAccount', '${1:UA-XXXXX-X}'], ['_trackPageview']];
            (function(d, t) {
                var g = d.createElement(t),
                    s = d.getElementsByTagName(t)[0];
                g.src = '//www.google-analytics.com/ga.js';
                s.parentNode.insertBefore(g, s);
            }(document, 'script'));
        </script>

- trigger: ga2
  scope: html
  description: New Google Analytics
  text: |
        <script>
            (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
            })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

            ga('create', '${1:UA-XXXX-X}');
            ga('send', 'pageview');
        </script>

- trigger: jquery
  scope: html
  description: jQuery Tag
  text: |
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="js/vendor/jquery-1.11.2.min.js"><\/script>')</script>

- trigger: shiv
  scope: html
  description: IE Shiv
  text: |
        <!--[if lt IE 9]>
            <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->

# ---
# CSS
# From: https://github.com/joshnh/CSS-Snippets
# ---
- trigger: ani
  scope: css
  description: Animation
  text: |
        -webkit-animation: ${1:name} ${2:duration};
        animation: ${1:name} ${2:duration};${3}

- trigger: aft
  scope: css
  description: After
  text: |
        ${1}:after {
            content: '';
            ${2}
        }

- trigger: box
  scope: css
  description: Box Shadow
  text: |
        box-shadow: ${1:horizontal}px ${2:vertical}px ${3:blur-radius}px ${4:spread-distance}px ${5:#eee};${6}

# From http://codepen.io/HugoGiraudel/pen/LklCv
- trigger: flex
  scope: css
  description: Flexbox
  text: |
        .flex-container {
          display: -webkit-box;
          display: -moz-box;
          display: -ms-flexbox;
          display: -webkit-flex;
          display: flex;

          -webkit-flex-flow: row wrap;
          justify-content: space-around;
        }

        .flex-item {
          flex: 1;
          background: tomato;
          padding: 50px;
          margin: 5px;
          color: white;
          text-align: center;
        }

- trigger: ff
  scope: css
  description: Font Family
  text: |
        font-family: Helvetica, Arial, sans-serif;

- trigger: h
  scope: css
  description: HSLA
  text: |
        hsla(${1:0},${2:0}%,${3:0}%,${4:1})${5}

- trigger: key
  scope: css
  description: KeyFrames
  text: |
        @-webkit-keyframes ${1:name} {
            0% {
              ${2:-webkit-transform: translate3d(0, 0, 0);}
            }
            100% {
              ${3:-webkit-transform: translate3d(0, 0, 0);}
            }
        }
        @keyframes ${1:name} {
            0% {
              ${2:transform: translate3d(0, 0, 0);}
            }
            100% {
              ${3:transform: translate3d(0, 0, 0);}
            }
        }

- trigger: med
  scope: css
  description: Media
  text: |
        @media (min-width: ${1}) {
          ${2}
        }

- trigger: r
  scope: css
  description: RGBA
  text: |
        rgba(${1:0},${2:0},${3:0},${4:1})${5}

- trigger: tex
  scope: css
  description: Text Shadow
  text: |
        text-shadow: ${1:horizontal}px ${2:vertical}px ${3:blur-radius}px ${4:#eee};${5}

- trigger: cap
  scope: css
  description: Capitalize
  text: |
        text-transform: capitalize;

- trigger: upp
  scope: css
  description: Upper Case
  text: |
        text-transform: uppercase;

- trigger: wra
  scope: css
  description: Word Wrap
  text: |
        overflow-wrap: break-word;
        word-wrap: break-word;


# ---
# Javascript: Console
# From: https://github.com/zenorocha/sublime-javascript-snippets
# ---
- trigger: cl
  scope: javascript
  description: console.log
  tag: VanillaJS
  tagHide: true
  text: |
        console.log(${1:obj});${2}

- trigger: cd
  scope: javascript
  description: console.dir
  tag: VanillaJS
  tagHide: true
  text: |
        console.dir(${1:obj});${2}

- trigger: ce
  scope: javascript
  description: console.error
  tag: VanillaJS
  tagHide: true
  text: |
        console.error(${1:obj});${2}

- trigger: cll
  scope: javascript
  description: console.log
  tag: VanillaJS
  tagHide: true
  text: |
        console.log('${1:obj}:', ${1:obj});${2}

- trigger: cdd
  scope: javascript
  description: console.dir
  tag: VanillaJS
  tagHide: true
  text: |
       console.dir('${1:obj}:', ${1:obj});${2}

- trigger: cee
  scope: javascript
  description: console.error
  tag: VanillaJS
  tagHide: true
  text: |
        console.error('${1:obj}:', ${1:obj});${2}

# ---
# Javascript: DOM
# ---
- trigger: ae
  scope: javascript
  description: document.addEventListener
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.addEventListener('${2:event}', function(e) {
          ${3}
        });

- trigger: ac
  scope: javascript
  description: document.appendChild
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.appendChild(${2:elem});${3}

- trigger: rc
  scope: javascript
  description: document.removeChild
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.removeChild(${2:elem});${3}

- trigger: cel
  scope: javascript
  description: document.createElement
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.createElement(${2:elem});${3}

- trigger: gi
  scope: javascript
  description: document.getElementById
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.getElementById('${2:id}');${3}

- trigger: gc
  scope: javascript
  description: document.getElementsByClassName
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.getElementsByClassName('${2:class}');${3}

- trigger: gt
  scope: javascript
  description: document.getElementsByTagName
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.getElementsByTagName('${2:tag}');${3}

- trigger: qs
  scope: javascript
  description: document.querySelector
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.querySelector('${2:selector}');${3}

- trigger: qsa
  scope: javascript
  description: document.querySelectorAll
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:document}.querySelectorAll('${2:selector}');${3}

# ---
# Javascript: Loop
# ---
- trigger: fe
  scope: javascript
  description: forEach
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:myArray}.forEach(function (${2:elem}) {
          ${3}
        });

- trigger: fi
  scope: javascript
  description: for in
  tag: VanillaJS
  tagHide: true
  text: |
        for (${1:prop} in ${2:obj}) {
          if (${2:obj}.hasOwnProperty(${1:prop})) {
            ${3}
          }
        }

# ---
# Javascript: Function
# ---
- trigger: fn
  scope: javascript
  description: function
  tag: VanillaJS
  tagHide: true
  text: |
        function ${1:methodName} (${2:arguments}) {
          ${3}
        }

- trigger: afn
  scope: javascript
  description: anonymous function
  tag: VanillaJS
  tagHide: true
  text: |
        function (${1:arguments}) {
          ${2}
        }

- trigger: pr
  scope: javascript
  description: prototype
  tag: VanillaJS
  tagHide: true
  text: |
        ${1:ClassName}.prototype.${2:methodName} = function (${3:arguments}) {
          ${4}
        };

- trigger: sw
  scope: javascript
  description: switch statement
  tag: VanillaJS
  tagHide: true
  text: |
        switch(${1:expression}) {
          case ${2:value}:
            ${3}
            break;
          default:
            break;
        }

# ---
# Javascript: Timer
# ---
- trigger: si
  scope: javascript
  description: setInterval
  tag: VanillaJS
  tagHide: true
  text: |
        setInterval(function() {
          ${2}
        }, ${1:delay});

- trigger: st
  scope: javascript
  description: setTimeout
  tag: VanillaJS
  tagHide: true
  text: |
        setTimeout(function() {
          ${2}
        }, ${1:delay});

# ---
# AngularJS
# From: myself
# ---
- trigger: config
  scope: javascript
  description: Config
  tag: AngularJS
  text: |
        config(function (${1:$stateProvider}) {
          ${2}
        })

- trigger: controller
  scope: javascript
  description: Controller
  tag: AngularJS
  text: |
        controller('${1:name}', function (${2:$scope}) {
          ${3}
        })

- trigger: directive
  scope: javascript
  description: Directive
  tag: AngularJS
  text: |
        directive('${1:name}', function () {
          return {
            templateUrl: '${2:view/foo.html}',
            restrict: '${3:A}',
            scope: {
            },
            link: function postLink (${4:$scope, elem, attrs}) {
              ${5}
            }
          }
        })

- trigger: factory
  scope: javascript
  description: Factory
  tag: AngularJS
  text: |
        factory('${1:name}', function (${2}) {
          ${3}
          return null;
        })

- trigger: filter
  scope: javascript
  description: Filter
  tag: AngularJS
  text: |
        filter(${1:name}, function(){
          return function(input){
            ${2}
            return input;
          };
        })

- trigger: provider
  scope: javascript
  description: Provider
  tag: AngularJS
  text: |
        provider('${1:name}', function () {
          ${2}

          this.$get = function () {
            return null;
          };
        })

- trigger: run
  scope: javascript
  description: Run
  tag: AngularJS
  text: |
        run(${1:$rootScope}, function () {
          ${2}
        })

- trigger: service
  scope: javascript
  description: Service
  tag: AngularJS
  text: |
        service('${1:name}', function (${2}) {
          ${3}
          return null;
        })

# ---
# php
# from: erknrio #5
# ---
- trigger: if
  scope: php
  description: if
  text: |
        if (${1:condition})
        {
          ${2}
        }

- trigger: ifelse
  scope: php
  description: if else
  text: |
        if (${1:condition})
        {
          ${2}
        }
        else
        {
          ${3}
        }

- trigger: if?
  scope: php
  description: if ternary
  text: |
        $${1:var}= (${2:condition}) ? ${3:TRUE} : ${4:FALSE};

- trigger: ifalt
  scope: php
  description: if alternative
  text: |
        if (${1:condition})
          ${2}
        endif;

- trigger: for
  scope: php
  description: for
  text: |
        for ($i = ${1:init}; $i < ${2:length}; $i++)
        {
          ${3}
        }

- trigger: fordec
  scope: php
  description: for decremental
  text: |
        for ($i = ${1:init}; $i > ${2:length}; $i--)
        {
          ${3}
        }

- trigger: foreach
  scope: php
  description: foreach value
  text: |
        foreach ($${1:var} as $${2:value})
        {
          ${3}
        }

- trigger: foreachkey
  scope: php
  description: foreach key value
  text: |
        foreach ($${1:var} as $${2:key} => $${3:value})
        {
          ${4}
        }

- trigger: foreachalt
  scope: php
  description: foreach value alternative
  text: |
        foreach ($${1:var} as $${2:value}):
         ${3}
        endforeach;

- trigger: foreachkeyalt
  scope: php
  description: foreach alternative
  text: |
        foreach ($${1:var} as $${3:value}):
         ${4}
        endforeach;

- trigger: foralt
  scope: php
  description: for alternative
  text: |
        for ($i = ${1:init}; $i < ${2:length}; $i++):
          ${3}
        endfor;

- trigger: switch
  scope: php
  description: switch
  text: |
        switch ($${1:var})
        {
          case ${2:'value'}:
            ${3}
            break;

          default:
            break;
        }

- trigger: switchalt
  scope: php
  description: switch alternative
  text: |
        switch ($${1:var}):
          case ${2:'value'}:
            ${3}
            break;

          default:
            break;
        endswitch;

- trigger: vardump
  scope: php
  description: var_dump
  text: |
        var_dump($${1:var});

- trigger: printr
  scope: php
  description: print_r
  text: |
        print_r($${1:var});

- trigger: fu
  scope: php
  description: function
  text: |
        ${1:public} function ${2:FunctionName} ($${3:value} = ${4:''})
        {
          ${5}
        }

- trigger: echo
  scope: php
  description: echo string
  text: |
        echo '${1:string}';

- trigger: echovar
  scope: php
  description: echo variable
  text: |
        echo $${1:var};

- trigger: echostringvar
  scope: php
  description: echo string and variable
  text: |
        echo '${1:string}' . $${2:var};

- trigger: br
  scope: php
  description: echo html br
  text: |
        echo '</br>';

- trigger: empty
  scope: php
  description: empty
  text: |
        empty($${1:var});

- trigger: isset
  scope: php
  description: isset
  text: |
        isset($${1:var});

- trigger: array
  scope: php
  description: array
  text: |
        array(${1:value});

- trigger: arrayasoc
  scope: php
  description: array associative
  text: |
        array(${1:key} => ${2:value});

- trigger: jsonencode
  scope: php
  description: json encode
  text: |
        json_encode(${1:data});

- trigger: jsondecode
  scope: php
  description: json decode
  text: |
        json_decode(${1:data});

- trigger: $
  scope: php
  description: new variable
  text: |
        $${1:var} = ${2:value};

- trigger: =?
  scope: php
  description: short echo(>=5.4.0)
  text: |
        <?= ${1} ;?>

- trigger: date
  scope: php
  description: php date
  text: |
        date('${1}')

- trigger: dateo
  scope: php
  description: php DateTime
  text: |
        DateTime()

- trigger: urldecode
  scope: php
  description: url decode
  text: |
        urldecode(${1:str})

- trigger: urlencode
  scope: php
  description: url encode
  text: |
        urlencode(${1:str})

- trigger: array_sort
  scope: php
  description: url encode
  text: |
        asort(${1:array})

- trigger: array_sort_reverse
  scope: php
  description: url encode
  text: |
        arsort(${1:array})
